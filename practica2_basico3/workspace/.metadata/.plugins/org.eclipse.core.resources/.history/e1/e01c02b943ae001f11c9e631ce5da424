/*
 * practica2.h
 *
 *  Created on: 29/11/2024
 *      Author: alumnos
 */

#ifndef PRACTICA2_H_
#define PRACTICA2_H_

/*
    practica2.h: constantes y estructuras para la práctica 2

 */

//- Librerías externas
    #include <stdio.h>
    #include "platform.h"
    #include "xparameters.h"
    #include "xiomodule.h"


//- Estructura para sensores
    typedef struct {
    // Por tanto, el objetivo del sistema es crear una vivienda inteligente
    // monitorizada por los siguientes componentes y sensores:
        u8 Prese; // 1 detector de presencia en la vivienda (ON – OFF).
        u8 LuzEx; // 1 sensor de luz exterior (0 – 100%).
        u8 TemIn; // 2 sensores de temperatura ambiental, uno interior
        u8 TemEx; // y otro exterior a la vivienda (0 – 60°C).
        u8 Ruido; // 1 detector de ruido exterior (0 – 120 dB).
    } st_Sensores;

//- Estados de ventanas y persianas
    /*
        R3a También se controlará en el interior del MicroBlaze la acción sobre los motores de las persianas y ventanas
            para abrirlas y cerrarlas, generando un cambio progresivo en los mismos.
    */
    typedef enum {
        ST_CERRADAS, // ventanas/persianas cerradas, motor parado
        ST_ABRIENDO, // ventanas/persianas abriéndose, motor encendido
        ST_ABIERTAS, // ventanas/persianas abiertas, motor parado
        ST_CERRANDO  // ventanas/persianas cerrándose, motor encendido
    } st;

//- Estructura para actuadores
    // Y los sistemas que accionaremos serán los siguientes:
    typedef struct {
        u8 ctLuz; // Luces de la casa, apagando o encendiendo las mismas (ON – OFF).
        u8 mtVen; // 1 motor para el control de la apertura y cierre de ventanas (0 – 100%).
        u8 mtPer; // 1 motor para controlar la subida y bajada de persianas (0 – 100%).
        u8 ptCal; // 1 control de calefacción, controlando la potencia de acción del mismo (0 – 100%).
        u8 ptAir; // 1 control de aire acondicionado, también con control de potencia de acción (0 – 100%).

        st stVen; // estado y transiciones de las ventanas
        st stPer; // estado y transiciones de las persianas
    } st_Actuadores;


//- Constantes simbólicas relacionadas con sensores y actuadores
    #define AUSENTE 0
    #define PRESENTE 1
    #define MIN_LUZEX 0
    #define MAX_LUZEX 100
    #define MIN_RUIDO 0
    #define MAX_RUIDO 120
    #define MIN_TEMP 0
    #define MAX_TEMP  60

    #define APAGADO 0
    #define ENCENDIDO 1
    #define MIN_MOTOR 0
    #define MAX_MOTOR 100



#endif /* PRACTICA2_H_ */
